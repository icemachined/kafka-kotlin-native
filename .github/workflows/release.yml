name: Create release to Maven Central

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
env:
  PGP_SEC: ${{ secrets.PGP_SEC }}
  PGP_PASSWORD: ${{ secrets.PGP_PASSWORD }}
  OSSRH_USERNAME: ${{ secrets.SONATYPE_USER }}
  OSSRH_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

jobs:
  release:
    name: Build release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, windows-latest, macos-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # release workflow should have access to all tags
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
      - name: Status git before
        run: git status
      - name: Install librdkafka on Linux
        if: ${{ runner.os == 'Linux' }}
        run: |
          wget -qO - https://packages.confluent.io/deb/7.2/archive.key | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://packages.confluent.io/deb/7.2 stable main"
          sudo add-apt-repository "deb https://packages.confluent.io/clients/deb $(lsb_release -cs) main"
          sudo apt-get update 
          sudo apt install librdkafka-dev
      - name: Install librdkafka on macOS
        if: ${{ runner.os == 'macOS' }}
        run: |
          brew install librdkafka
      - name: gradle release from tag
        # if workflow is triggered after push of a tag, deploy full release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: |
            linkReleaseExecutableMultiplatform
            publishToSonatype
            closeSonatypeStagingRepository
            -Prelease
            --build-cache
            -PgprUser=${{ github.actor }}
            -PgprKey=${{ secrets.GITHUB_TOKEN }}
      - name: gradle snapshot from branch
        # if workflow is triggered after push to a branch, deploy snapshot
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: |
            linkReleaseExecutableMultiplatform
            publishToSonatype
            -Preckon.stage=snapshot
            -Prelease
            --build-cache
            -PgprUser=${{ github.actor }}
            -PgprKey=${{ secrets.GITHUB_TOKEN }}
      - name: Status git after
        if: ${{ always() }}
        run: git status

  github_release:
    needs: release
    # release is created only for tags
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    name: Create Github Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
